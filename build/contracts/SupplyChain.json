{
  "contractName": "SupplyChain",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isManufacturer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        }
      ],
      "name": "fetchtaxHistory",
      "outputs": [
        {
          "name": "numberOfupdate",
          "type": "uint256"
        },
        {
          "name": "timeStamps",
          "type": "uint256[]"
        },
        {
          "name": "lastPaidTax",
          "type": "uint256[]"
        },
        {
          "name": "totalTax",
          "type": "uint256[]"
        },
        {
          "name": "updaterAddresses",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        }
      ],
      "name": "setCustomerRecieved",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsManufacturer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        }
      ],
      "name": "fetchProductItemData",
      "outputs": [
        {
          "name": "pID",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "currentOwner",
          "type": "address"
        },
        {
          "name": "manufacturerId",
          "type": "address"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "totalTax",
          "type": "uint256"
        },
        {
          "name": "lastPaidTax",
          "type": "uint256"
        },
        {
          "name": "numberOfTaxUpdate",
          "type": "uint256"
        },
        {
          "name": "customerRecieved",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromManufacturer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastPID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        }
      ],
      "name": "getCustomerRecieved",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "taxCollector",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "whoAmI",
      "outputs": [
        {
          "name": "Buyer",
          "type": "bool"
        },
        {
          "name": "manufacturer",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIManufacturer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        },
        {
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setNewPrice",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pID",
          "type": "uint256"
        }
      ],
      "name": "Manufactured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pID",
          "type": "uint256"
        }
      ],
      "name": "taxUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "pID",
          "type": "uint256"
        }
      ],
      "name": "Purchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ManufacturerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ManufacturerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_price",
          "type": "uint256"
        },
        {
          "name": "_tax",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "manufacturProductsLoud",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        },
        {
          "name": "_paidTax",
          "type": "uint256"
        }
      ],
      "name": "updateTaxHistory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_pID",
          "type": "uint256"
        }
      ],
      "name": "purchaseProduct",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromBuyer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isManufacturer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"fetchtaxHistory\",\"outputs\":[{\"name\":\"numberOfupdate\",\"type\":\"uint256\"},{\"name\":\"timeStamps\",\"type\":\"uint256[]\"},{\"name\":\"lastPaidTax\",\"type\":\"uint256[]\"},{\"name\":\"totalTax\",\"type\":\"uint256[]\"},{\"name\":\"updaterAddresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsBuyer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"purchaseProduct\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"setCustomerRecieved\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsManufacturer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"fetchProductItemData\",\"outputs\":[{\"name\":\"pID\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"currentOwner\",\"type\":\"address\"},{\"name\":\"manufacturerId\",\"type\":\"address\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"totalTax\",\"type\":\"uint256\"},{\"name\":\"lastPaidTax\",\"type\":\"uint256\"},{\"name\":\"numberOfTaxUpdate\",\"type\":\"uint256\"},{\"name\":\"customerRecieved\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromManufacturer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"},{\"name\":\"_paidTax\",\"type\":\"uint256\"}],\"name\":\"updateTaxHistory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastPID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"}],\"name\":\"getCustomerRecieved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"taxCollector\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_tax\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"manufacturProductsLoud\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoAmI\",\"outputs\":[{\"name\":\"Buyer\",\"type\":\"bool\"},{\"name\":\"manufacturer\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIManufacturer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pID\",\"type\":\"uint256\"},{\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setNewPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pID\",\"type\":\"uint256\"}],\"name\":\"Manufactured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pID\",\"type\":\"uint256\"}],\"name\":\"taxUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"pID\",\"type\":\"uint256\"}],\"name\":\"Purchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"amIBuyer()\":{\"return\":\"boolean for caller address state in `_Buyers` Role\"},\"amIManufacturer()\":{\"return\":\"boolean for caller address state in `_manufacturers` Role\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"},\"whoAmI()\":{\"return\":\"array contining every role with its state as boolean\"}},\"title\":\"Supply Chain Contract\"},\"userdoc\":{\"methods\":{\"assignMeAsBuyer()\":{\"notice\":\"Function to assign caller `msg.sender` to Buyer role\"},\"assignMeAsManufacturer()\":{\"notice\":\"Function to assign caller `msg.sender` to manufacturer role\"},\"isBuyer(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"isManufacturer(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"purchaseProduct(uint256)\":{\"notice\":\"Function helps manufacturer to Pack a isManufactured Product Loud\"},\"renounceMeFromBuyer()\":{\"notice\":\"Function to renounce caller `msg.sender` from Buyer role\"},\"renounceMeFromManufacturer()\":{\"notice\":\"Function to renounce caller `msg.sender` from manufacturer role\"}}}},\"settings\":{\"compilationTarget\":{\"/E/document/blockchain/myprojects/simplevat/contracts/SupplyChain.sol\":\"SupplyChain\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol\":{\"keccak256\":\"0x867b166ae6137ebbb5eaece6a0a21eaa52c193498f779d37e34d5e6d0e2694ea\",\"urls\":[\"bzzr://044dc9d38b4b446b725533dea43d5c02d0b1e65929c6d0907237a130b03a0af6\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol\":{\"keccak256\":\"0x112222c33b798cda8c39b84f7c87d0ec3e8e75b3fe7b49f24cb72fd059b5d819\",\"urls\":[\"bzzr://9dcca2e90c10b0666f5a1cccc4201cd012ed903348437430569730b7f837b129\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol\":{\"keccak256\":\"0xc4213c1333c5e3d1043cc3ae92ffc7afb5407ed64451b6cec2a67c2624a8881d\",\"urls\":[\"bzzr://321cb4330a82d16ff4bd73393b8582f26ab95c5ea4fa6f0e810ed3c20eac3385\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/Product.sol\":{\"keccak256\":\"0x500464a45553f40b7719c8a8807a40535902df4dacb84847fee0cc95096053b8\",\"urls\":[\"bzzr://632e1adf63896c5bb9e46e75437ba7ea0ad2990f22614eb0e5a5f323f1a06c08\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/SupplyChain.sol\":{\"keccak256\":\"0x38a47cbd9a7dad644f075f65c37300957a81b7cd3a8ad1c4d4d4ac2457b8d091\",\"urls\":[\"bzzr://8b22e584bde74fffec8bdf0fabebfe685f61b8e5501d9d7ad8059b5ada978da8\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xd1b5c934bab36d753c22987ad98c7614cb50ebf641371a83c96f8138619d7c30\",\"urls\":[\"bzzr://39c672e2273e863fd2a6d1bc452e38887b48c113483b0e4c9d7aff60f3337483\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xd3e5a49edfb74654d122962cc60b917d1c60461e669a7262fd7aba201fac1260\",\"urls\":[\"bzzr://78a64ae8f0f90b1aa83280e0735930a16f416eeda54683d2f6280a67ad3758d6\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060055573ac9cef7d952a26b75777ab191213073cdb987adb600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006b57600080fd5b506200007d33620000d760201b60201c565b6200008e336200013860201b60201c565b620000ae620000a26200019960201b60201c565b620001a160201b60201c565b6000600360006101000a81548160ff0219169083151502179055506000600481905550620003c6565b620000f28160006200020260201b6200215c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b620001538160016200020260201b6200215c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b600033905090565b620001bc8160026200020260201b6200215c1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b620002148282620002e660201b60201c565b1562000288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200036f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200280d6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61243780620003d66000396000f3fe6080604052600436106101665760003560e01c80637ace31ef116100d1578063b3bf8d3e1161008a578063d130cd6411610064578063d130cd6414610830578063da91254c1461090c578063e1d6f86f14610946578063e23a60fe1461097557610166565b8063b3bf8d3e14610757578063bea1dcf8146107aa578063c40f1bdc1461080157610166565b80637ace31ef1461052057806382dc1ec4146106685780638456cb59146106b9578063a40e210f146106d0578063aa9903ee146106e7578063ac2f03e01461072c57610166565b80633f4ba83a116101235780633f4ba83a14610408578063449094f31461041f57806346fbf68e1461045a57806348c149bd146104c35780635c975abb146104da5780636ef8d66d1461050957610166565b806307e3c3031461016b57806317d4a491146101825780632a55feec146101eb5780632c7cef2e1461025457806335db95e5146103c357806338e76a03146103da575b600080fd5b34801561017757600080fd5b506101806109ba565b005b34801561018e57600080fd5b506101d1600480360360208110156101a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c5565b604051808215151515815260200191505060405180910390f35b3480156101f757600080fd5b5061023a6004803603602081101561020e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e2565b604051808215151515815260200191505060405180910390f35b34801561026057600080fd5b5061028d6004803603602081101561027757600080fd5b81019080803590602001909291905050506109ff565b6040518086815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102e25780820151818401526020810190506102c7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015610324578082015181840152602081019050610309565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036657808201518184015260208101905061034b565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103a857808201518184015260208101905061038d565b50505050905001995050505050505050505060405180910390f35b3480156103cf57600080fd5b506103d8610c39565b005b610406600480360360208110156103f057600080fd5b8101908080359060200190929190505050610c44565b005b34801561041457600080fd5b5061041d610f26565b005b34801561042b57600080fd5b506104586004803603602081101561044257600080fd5b8101908080359060200190929190505050611094565b005b34801561046657600080fd5b506104a96004803603602081101561047d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111b3565b604051808215151515815260200191505060405180910390f35b3480156104cf57600080fd5b506104d86111d0565b005b3480156104e657600080fd5b506104ef6111db565b604051808215151515815260200191505060405180910390f35b34801561051557600080fd5b5061051e6111f2565b005b34801561052c57600080fd5b506105596004803603602081101561054357600080fd5b8101908080359060200190929190505050611204565b604051808a8152602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018315151515815260200182810382528a818151815260200191508051906020019080838360005b8381101561062557808201518184015260208101905061060a565b50505050905090810190601f1680156106525780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561067457600080fd5b506106b76004803603602081101561068b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113fc565b005b3480156106c557600080fd5b506106ce61146d565b005b3480156106dc57600080fd5b506106e56115dc565b005b3480156106f357600080fd5b5061072a6004803603604081101561070a57600080fd5b8101908080359060200190929190803590602001909291905050506115e7565b005b34801561073857600080fd5b506107416115f5565b6040518082815260200191505060405180910390f35b34801561076357600080fd5b506107906004803603602081101561077a57600080fd5b81019080803590602001909291905050506115ff565b604051808215151515815260200191505060405180910390f35b3480156107b657600080fd5b506107bf6116a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080d57600080fd5b506108166116c8565b604051808215151515815260200191505060405180910390f35b34801561083c57600080fd5b5061090a6004803603606081101561085357600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561088457600080fd5b82018360208201111561089657600080fd5b803590602001918460018302840111640100000000831117156108b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116e3565b005b34801561091857600080fd5b506109216116f3565b6040518083151515158152602001821515151581526020019250505060405180910390f35b34801561095257600080fd5b5061095b61170e565b604051808215151515815260200191505060405180910390f35b34801561098157600080fd5b506109b86004803603604081101561099857600080fd5b810190808035906020019092919080359060200190929190505050611729565b005b6109c333611835565b565b60006109db82600161188f90919063ffffffff16565b9050919050565b60006109f882600061188f90919063ffffffff16565b9050919050565b600060608060608085600060066000838152602001908152602001600020600601541415610a2c57600080fd5b600060066000898152602001908152602001600020905080600601549650606087604051908082528060200260200182016040528015610a7b5781602001602082028038833980820191505090505b509050606088604051908082528060200260200182016040528015610aaf5781602001602082028038833980820191505090505b509050606089604051908082528060200260200182016040528015610ae35781602001602082028038833980820191505090505b50905060608a604051908082528060200260200182016040528015610b175781602001602082028038833980820191505090505b50905060008090505b8560060154811015610c1557600086600501600083815260200190815260200160002090508060000154868381518110610b5657fe5b6020026020010181815250508060010154858381518110610b7357fe5b6020026020010181815250508060020154848381518110610b9057fe5b6020026020010181815250508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110610bcd57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050508080600101915050610b20565b5083838383809a50819b50829c50839d505050505050505050505091939590929450565b610c423361196d565b565b600360009054906101000a900460ff1615610cc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b60006006600083815260200190815260200160002060040154905060006006600084815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006006600085815260200190815260200160002060050160006001600660008881526020019081526020016000206006015403815260200190815260200160002060010154905060008160646009860281610d7557fe5b0403905060646009850281610d8657fe5b048401341015610dfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f7420456e6f7567682100000000000000000000000000000000000000000081525060200191505060405180910390fd5b600081838601013403905060008114610e59573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e57573d6000803e3d6000fd5b505b610e62866119c7565b610e6c86836115e7565b8373ffffffffffffffffffffffffffffffffffffffff166108fc8487019081150290604051600060405180830381858888f19350505050158015610eb4573d6000803e3d6000fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610f1d573d6000803e3d6000fd5b50505050505050565b610f36610f31611aeb565b6111b3565b610f8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123996030913960400191505060405180910390fd5b600360009054906101000a900460ff1661100d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600360006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611051611aeb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b8060003373ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490508061110857600080fd5b600083141561117f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b60016006600085815260200190815260200160002060070160006101000a81548160ff021916908315150217905550505050565b60006111c982600261188f90919063ffffffff16565b9050919050565b6111d933611af3565b565b6000600360009054906101000a900460ff16905090565b6112026111fd611aeb565b611b4d565b565b600060606000806000806000806000808a1415611289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b6000600660008c815260200190815260200160002090508a9950806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133b5780601f106113105761010080835404028352916020019161133b565b820191906000526020600020905b81548152906001019060200180831161131e57829003601f168201915b505050505098508060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1697508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16965080600401549550806006015492508060050160006001850381526020019081526020016000206002015494508060050160006001850381526020019081526020016000206001015493508060070160009054906101000a900460ff169150509193959799909294969850565b61140c611407611aeb565b6111b3565b611461576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123996030913960400191505060405180910390fd5b61146a81611ba7565b50565b61147d611478611aeb565b6111b3565b6114d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123996030913960400191505060405180910390fd5b600360009054906101000a900460ff1615611555576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600360006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611599611aeb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6115e533611c01565b565b6115f18282611c5b565b5050565b6000600554905090565b600080821415611677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b6006600083815260200190815260200160002060070160009054906101000a900460ff169050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006116de33600061188f90919063ffffffff16565b905090565b6116ee838383611e35565b505050565b6000806116fe6116c8565b915061170861170e565b90509091565b600061172433600161188f90919063ffffffff16565b905090565b8160003373ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490508061179d57600080fd5b6000841415611814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b82600660008681526020019081526020016000206004018190555050505050565b61184981600061209f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611916576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123ea6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61198181600061215c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b806000600660008381526020019081526020016000206006015414156119ec57600080fd5b81600115156006600083815260200190815260200160002060070160009054906101000a900460ff1615151415611a2257600080fd5b60016006600085815260200190815260200160002060020160006101000a81548160ff02191690836001811115611a5557fe5b0217905550336006600085815260200190815260200160002060020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f653d56639fee6b566a5c804764e9689de38645f0b733df89a36a1b7b42173dd8836040518082815260200191505060405180910390a1505050565b600033905090565b611b0781600161215c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b611b6181600261209f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b611bbb81600261215c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b611c1581600161209f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b60008060066000858152602001908152602001600020600601541415611c8357819050611ceb565b6000600660008581526020019081526020016000206006015414611cea578160066000858152602001908152602001600020600501600060016006600088815260200190815260200160002060060154038152602001908152602001600020600201540190505b5b611cf3612237565b60405180608001604052804281526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152509050806006600086815260200190815260200160002060050160006006600088815260200190815260200160002060060154815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060066000858152602001908152602001600020600601600081548092919060010191905055507fe0abde12d5564a014f3a4a4468f87400e13c581a9847e1868181a29dcc31e222846040518082815260200191505060405180910390a150505050565b60006004600081546001019190508190559050611e50612275565b81816020018181525050600081604001906001811115611e6c57fe5b90816001811115611e7957fe5b8152505033816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008160c0018181525050848160a001818152505082816000018190525060008160e001901515908115158152505080600660008481526020019081526020016000206000820151816000019080519060200190611f4c9291906122f3565b506020820151816001015560408201518160020160006101000a81548160ff02191690836001811115611f7b57fe5b021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555090505061204f82856115e7565b6005600081548092919060010191905055507fd29d8a68ca7c8c74be5579719d445aabfe230ed6e6a83aff475a663500eb7609826040518082815260200191505060405180910390a15050505050565b6120a9828261188f565b6120fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123c96021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b612166828261188f565b156121d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060800160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60405180610100016040528060608152602001600081526020016000600181111561229c57fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061233457805160ff1916838001178555612362565b82800160010185558215612362579182015b82811115612361578251825591602001919060010190612346565b5b50905061236f9190612373565b5090565b61239591905b80821115612391576000816000905550600101612379565b5090565b9056fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a723058206b35313e60147022cf4f6aaa90566a679aba17cad563df320ec30654e44c09030029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c80637ace31ef116100d1578063b3bf8d3e1161008a578063d130cd6411610064578063d130cd6414610830578063da91254c1461090c578063e1d6f86f14610946578063e23a60fe1461097557610166565b8063b3bf8d3e14610757578063bea1dcf8146107aa578063c40f1bdc1461080157610166565b80637ace31ef1461052057806382dc1ec4146106685780638456cb59146106b9578063a40e210f146106d0578063aa9903ee146106e7578063ac2f03e01461072c57610166565b80633f4ba83a116101235780633f4ba83a14610408578063449094f31461041f57806346fbf68e1461045a57806348c149bd146104c35780635c975abb146104da5780636ef8d66d1461050957610166565b806307e3c3031461016b57806317d4a491146101825780632a55feec146101eb5780632c7cef2e1461025457806335db95e5146103c357806338e76a03146103da575b600080fd5b34801561017757600080fd5b506101806109ba565b005b34801561018e57600080fd5b506101d1600480360360208110156101a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c5565b604051808215151515815260200191505060405180910390f35b3480156101f757600080fd5b5061023a6004803603602081101561020e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e2565b604051808215151515815260200191505060405180910390f35b34801561026057600080fd5b5061028d6004803603602081101561027757600080fd5b81019080803590602001909291905050506109ff565b6040518086815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156102e25780820151818401526020810190506102c7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015610324578082015181840152602081019050610309565b50505050905001858103835287818151815260200191508051906020019060200280838360005b8381101561036657808201518184015260208101905061034b565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156103a857808201518184015260208101905061038d565b50505050905001995050505050505050505060405180910390f35b3480156103cf57600080fd5b506103d8610c39565b005b610406600480360360208110156103f057600080fd5b8101908080359060200190929190505050610c44565b005b34801561041457600080fd5b5061041d610f26565b005b34801561042b57600080fd5b506104586004803603602081101561044257600080fd5b8101908080359060200190929190505050611094565b005b34801561046657600080fd5b506104a96004803603602081101561047d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111b3565b604051808215151515815260200191505060405180910390f35b3480156104cf57600080fd5b506104d86111d0565b005b3480156104e657600080fd5b506104ef6111db565b604051808215151515815260200191505060405180910390f35b34801561051557600080fd5b5061051e6111f2565b005b34801561052c57600080fd5b506105596004803603602081101561054357600080fd5b8101908080359060200190929190505050611204565b604051808a8152602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018315151515815260200182810382528a818151815260200191508051906020019080838360005b8381101561062557808201518184015260208101905061060a565b50505050905090810190601f1680156106525780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561067457600080fd5b506106b76004803603602081101561068b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113fc565b005b3480156106c557600080fd5b506106ce61146d565b005b3480156106dc57600080fd5b506106e56115dc565b005b3480156106f357600080fd5b5061072a6004803603604081101561070a57600080fd5b8101908080359060200190929190803590602001909291905050506115e7565b005b34801561073857600080fd5b506107416115f5565b6040518082815260200191505060405180910390f35b34801561076357600080fd5b506107906004803603602081101561077a57600080fd5b81019080803590602001909291905050506115ff565b604051808215151515815260200191505060405180910390f35b3480156107b657600080fd5b506107bf6116a2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561080d57600080fd5b506108166116c8565b604051808215151515815260200191505060405180910390f35b34801561083c57600080fd5b5061090a6004803603606081101561085357600080fd5b8101908080359060200190929190803590602001909291908035906020019064010000000081111561088457600080fd5b82018360208201111561089657600080fd5b803590602001918460018302840111640100000000831117156108b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116e3565b005b34801561091857600080fd5b506109216116f3565b6040518083151515158152602001821515151581526020019250505060405180910390f35b34801561095257600080fd5b5061095b61170e565b604051808215151515815260200191505060405180910390f35b34801561098157600080fd5b506109b86004803603604081101561099857600080fd5b810190808035906020019092919080359060200190929190505050611729565b005b6109c333611835565b565b60006109db82600161188f90919063ffffffff16565b9050919050565b60006109f882600061188f90919063ffffffff16565b9050919050565b600060608060608085600060066000838152602001908152602001600020600601541415610a2c57600080fd5b600060066000898152602001908152602001600020905080600601549650606087604051908082528060200260200182016040528015610a7b5781602001602082028038833980820191505090505b509050606088604051908082528060200260200182016040528015610aaf5781602001602082028038833980820191505090505b509050606089604051908082528060200260200182016040528015610ae35781602001602082028038833980820191505090505b50905060608a604051908082528060200260200182016040528015610b175781602001602082028038833980820191505090505b50905060008090505b8560060154811015610c1557600086600501600083815260200190815260200160002090508060000154868381518110610b5657fe5b6020026020010181815250508060010154858381518110610b7357fe5b6020026020010181815250508060020154848381518110610b9057fe5b6020026020010181815250508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838381518110610bcd57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050508080600101915050610b20565b5083838383809a50819b50829c50839d505050505050505050505091939590929450565b610c423361196d565b565b600360009054906101000a900460ff1615610cc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b60006006600083815260200190815260200160002060040154905060006006600084815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006006600085815260200190815260200160002060050160006001600660008881526020019081526020016000206006015403815260200190815260200160002060010154905060008160646009860281610d7557fe5b0403905060646009850281610d8657fe5b048401341015610dfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4e6f7420456e6f7567682100000000000000000000000000000000000000000081525060200191505060405180910390fd5b600081838601013403905060008114610e59573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e57573d6000803e3d6000fd5b505b610e62866119c7565b610e6c86836115e7565b8373ffffffffffffffffffffffffffffffffffffffff166108fc8487019081150290604051600060405180830381858888f19350505050158015610eb4573d6000803e3d6000fd5b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610f1d573d6000803e3d6000fd5b50505050505050565b610f36610f31611aeb565b6111b3565b610f8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123996030913960400191505060405180910390fd5b600360009054906101000a900460ff1661100d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600360006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611051611aeb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b8060003373ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490508061110857600080fd5b600083141561117f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b60016006600085815260200190815260200160002060070160006101000a81548160ff021916908315150217905550505050565b60006111c982600261188f90919063ffffffff16565b9050919050565b6111d933611af3565b565b6000600360009054906101000a900460ff16905090565b6112026111fd611aeb565b611b4d565b565b600060606000806000806000806000808a1415611289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b6000600660008c815260200190815260200160002090508a9950806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133b5780601f106113105761010080835404028352916020019161133b565b820191906000526020600020905b81548152906001019060200180831161131e57829003601f168201915b505050505098508060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1697508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16965080600401549550806006015492508060050160006001850381526020019081526020016000206002015494508060050160006001850381526020019081526020016000206001015493508060070160009054906101000a900460ff169150509193959799909294969850565b61140c611407611aeb565b6111b3565b611461576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123996030913960400191505060405180910390fd5b61146a81611ba7565b50565b61147d611478611aeb565b6111b3565b6114d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806123996030913960400191505060405180910390fd5b600360009054906101000a900460ff1615611555576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600360006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611599611aeb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6115e533611c01565b565b6115f18282611c5b565b5050565b6000600554905090565b600080821415611677576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b6006600083815260200190815260200160002060070160009054906101000a900460ff169050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006116de33600061188f90919063ffffffff16565b905090565b6116ee838383611e35565b505050565b6000806116fe6116c8565b915061170861170e565b90509091565b600061172433600161188f90919063ffffffff16565b905090565b8160003373ffffffffffffffffffffffffffffffffffffffff166006600084815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490508061179d57600080fd5b6000841415611814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f476976656e20704944204e6f742043726561746564205965742100000000000081525060200191505060405180910390fd5b82600660008681526020019081526020016000206004018190555050505050565b61184981600061209f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611916576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806123ea6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61198181600061215c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b806000600660008381526020019081526020016000206006015414156119ec57600080fd5b81600115156006600083815260200190815260200160002060070160009054906101000a900460ff1615151415611a2257600080fd5b60016006600085815260200190815260200160002060020160006101000a81548160ff02191690836001811115611a5557fe5b0217905550336006600085815260200190815260200160002060020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f653d56639fee6b566a5c804764e9689de38645f0b733df89a36a1b7b42173dd8836040518082815260200191505060405180910390a1505050565b600033905090565b611b0781600161215c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b611b6181600261209f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b611bbb81600261215c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b611c1581600161209f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b60008060066000858152602001908152602001600020600601541415611c8357819050611ceb565b6000600660008581526020019081526020016000206006015414611cea578160066000858152602001908152602001600020600501600060016006600088815260200190815260200160002060060154038152602001908152602001600020600201540190505b5b611cf3612237565b60405180608001604052804281526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152509050806006600086815260200190815260200160002060050160006006600088815260200190815260200160002060060154815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060066000858152602001908152602001600020600601600081548092919060010191905055507fe0abde12d5564a014f3a4a4468f87400e13c581a9847e1868181a29dcc31e222846040518082815260200191505060405180910390a150505050565b60006004600081546001019190508190559050611e50612275565b81816020018181525050600081604001906001811115611e6c57fe5b90816001811115611e7957fe5b8152505033816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008160c0018181525050848160a001818152505082816000018190525060008160e001901515908115158152505080600660008481526020019081526020016000206000820151816000019080519060200190611f4c9291906122f3565b506020820151816001015560408201518160020160006101000a81548160ff02191690836001811115611f7b57fe5b021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816004015560c0820151816006015560e08201518160070160006101000a81548160ff02191690831515021790555090505061204f82856115e7565b6005600081548092919060010191905055507fd29d8a68ca7c8c74be5579719d445aabfe230ed6e6a83aff475a663500eb7609826040518082815260200191505060405180910390a15050505050565b6120a9828261188f565b6120fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123c96021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b612166828261188f565b156121d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6040518060800160405280600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60405180610100016040528060608152602001600081526020016000600181111561229c57fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061233457805160ff1916838001178555612362565b82800160010185558215612362579182015b82811115612361578251825591602001919060010190612346565b5b50905061236f9190612373565b5090565b61239591905b80821115612391576000816000905550600101612379565b5090565b9056fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a723058206b35313e60147022cf4f6aaa90566a679aba17cad563df320ec30654e44c09030029",
  "sourceMap": "359:1585:6:-;;;83:1:5;68:16;;455:42:6;417:80;;;;;;;;;;;;;;;;;;;;514:31;8:9:-1;5:2;;;30:1;27;20:12;5:2;514:31:6;442:21:1;452:10;442:9;;;:21;;:::i;:::-;658:28:2;675:10;658:16;;;:28;;:::i;:::-;318:24:18;329:12;:10;;;:12;;:::i;:::-;318:10;;;:24;;:::i;:::-;1023:5:53;1013:7;;:15;;;;;;;;;;;;;;;;;;2516:1:5;2510:3;:7;;;;359:1585:6;;1783:119:1;1839:20;1851:7;1839;:11;;;;;;:20;;;;:::i;:::-;1886:7;1875:19;;;;;;;;;;;;1783:119;:::o;2133:140:2:-;2196:27;2215:7;2196:14;:18;;;;;;:27;;;;:::i;:::-;2257:7;2239:26;;;;;;;;;;;;2133:140;:::o;791:88:7:-;836:7;862:10;855:17;;791:88;:::o;786:119:18:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;260:175:15:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;359:1585:6:-;;;;;;;",
  "deployedSourceMap": "359:1585:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:81:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1492:81:1;;;:::i;:::-;;1193:121:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:121:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1193:121:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;927:107:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;927:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;927:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6277:1290:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6277:1290:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6277:1290:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6277:1290:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6277:1290:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6277:1290:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6277:1290:5;;;;;;;;;;;;;;;;;;;;;;;;1344:74:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:74:1;;;:::i;:::-;;1011:928:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1011:928:6;;;;;;;;;;;;;;;;;:::i;:::-;;1892:117:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1892:117:53;;;:::i;:::-;;3892:179:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3892:179:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3892:179:5;;;;;;;;;;;;;;;;;:::i;:::-;;494:107:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;494:107:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;494:107:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1659:88:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1659:88:2;;;:::i;:::-;;1130:76:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1130:76:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;703:77:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;703:77:18;;;:::i;:::-;;4358:1019:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4358:1019:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4358:1019:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4358:1019:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:90:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:90:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;607:90:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;1687:115:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1687:115:53;;;:::i;:::-;;1828:95:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1828:95:2;;;:::i;:::-;;761:161:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;761:161:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;761:161:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4269:81:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4269:81:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4079:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4079:182:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4079:182:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;417:80:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;417:80:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1178:96:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1178:96:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;553:196:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:196:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;553:196:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;553:196:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;553:196:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;553:196:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;553:196:6;;;;;;;;;;;;;;;:::i;:::-;;287:179:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;287:179:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:110:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1472:110:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3706:178:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3706:178:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3706:178:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1492:81:1;1541:24;1554:10;1541:12;:24::i;:::-;1492:81::o;1193:121:2:-;1255:4;1279:27;1298:7;1279:14;:18;;:27;;;;:::i;:::-;1272:34;;1193:121;;;:::o;927:107:1:-;982:4;1006:20;1018:7;1006;:11;;:20;;;;:::i;:::-;999:27;;927:107;;;:::o;6277:1290:5:-;6409:19;6443:24;6482:25;6522:22;6559:33;6372:4;2269:1;2236:6;:12;2243:4;2236:12;;;;;;;;;;;:29;;;:34;;2228:43;;;;;;6620:33;6656:6;:12;6663:4;6656:12;;;;;;;;;;;6620:48;;6696:12;:29;;;6679:46;;6736:25;6775:14;6764:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6764:26:5;;;;6736:54;;6801:26;6841:14;6830:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6830:26:5;;;;6801:55;;6867:23;6904:14;6893:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6893:26:5;;;;6867:52;;6930:34;6981:14;6967:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6967:29:5;;;;6930:66;;7012:6;7021:1;7012:10;;7007:363;7028:12;:29;;;7024:1;:33;7007:363;;;7079:31;7113:12;:23;;:26;7137:1;7113:26;;;;;;;;;;;7079:60;;7171:10;:20;;;7154:11;7166:1;7154:14;;;;;;;;;;;;;:37;;;;;7224:10;:22;;;7206:12;7219:1;7206:15;;;;;;;;;;;;;:40;;;;;7276:10;:19;;;7261:9;7271:1;7261:12;;;;;;;;;;;;;:34;;;;;7333:10;:25;;;;;;;;;;;;7310:17;7328:1;7310:20;;;;;;;;;;;;;:48;;;;;;;;;;;7007:363;7059:3;;;;;;;7007:363;;;;7451:11;7478:12;7507:9;7531:17;7380:179;;;;;;;;;;;;;;;;2282:1;;;;;6277:1290;;;;;;;;:::o;1344:74:1:-;1389:21;1399:10;1389:9;:21::i;:::-;1344:74::o;1011:928:6:-;1359:7:53;;;;;;;;;;;1358:8;1350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:10:6;1158:6;:12;1165:4;1158:12;;;;;;;;;;;:18;;;1145:31;;1187:24;1214:6;:12;1221:4;1214:12;;;;;;;;;;;:27;;;;;;;;;;;;1187:54;;1384:12;1399:6;:12;1406:4;1399:12;;;;;;;;;;;:23;;:56;1453:1;1423:6;:12;1430:4;1423:12;;;;;;;;;;;:29;;;:31;1399:56;;;;;;;;;;;:68;;;1384:83;;1480:14;1514:7;1508:3;1504:1;1498:5;:7;1497:14;;;;;;:24;1480:41;;1574:3;1570:1;1564:5;:7;1563:14;;;;;;1557:5;:20;1544:9;:33;;1536:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:19;1657:9;1647:7;1639:5;:15;:27;1626:9;:41;1604:63;;1700:1;1682:14;:19;1678:82;;1724:10;1716:28;;:44;1745:14;1716:44;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1716:44:6;1678:82;1773:27;1795:4;1773:21;:27::i;:::-;1811:32;1828:4;1833:9;1811:16;:32::i;:::-;1854:8;:17;;:34;1880:7;1872:5;:15;1854:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1854:34:6;1899:12;;;;;;;;;;;:21;;:32;1921:9;1899:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1899:32:6;1397:1:53;;;;;1011:928:6;:::o;1892:117:53:-;395:22:18;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:7:53;;;;;;;;;;;1542:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:5;1950:7;;:15;;;;;;;;;;;;;;;;;;1980:22;1989:12;:10;:12::i;:::-;1980:22;;;;;;;;;;;;;;;;;;;;;;1892:117::o;3892:179:5:-;3951:4;1987:12;2033:10;2002:41;;:6;:12;2009:4;2002:12;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;1987:56;;2062:7;2054:16;;;;;;3984:1;3976:4;:9;;3967:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4059:4;4027:6;:12;4034:4;4027:12;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;3892:179;;;:::o;494:107:18:-;550:4;573:21;586:7;573:8;:12;;:21;;;;:::i;:::-;566:28;;494:107;;;:::o;1659:88:2:-;1711:28;1728:10;1711:16;:28::i;:::-;1659:88::o;1130:76:53:-;1169:4;1192:7;;;;;;;;;;;1185:14;;1130:76;:::o;703:77:18:-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;4358:1019:5:-;4487:8;4510:18;4543:20;4578:22;4615:10;4640:13;4668:16;4699:22;4736:21;4802:1;4794:4;:9;;4785:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:33;4881:6;:12;4888:4;4881:12;;;;;;;;;;;4845:48;;4910:4;4904:10;;4932:12;:17;;4925:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4975:12;:27;;;;;;;;;;;;4960:42;;5030:12;:27;;;;;;;;;;;;5013:44;;5076:12;:18;;;5068:26;;5125:12;:29;;;5105:49;;5176:12;:23;;:44;5218:1;5200:17;:19;5176:44;;;;;;;;;;;:53;;;5165:64;;5254:12;:23;;:44;5296:1;5278:17;:19;5254:44;;;;;;;;;;;:56;;;5240:70;;5340:12;:29;;;;;;;;;;;;5321:48;;4358:1019;;;;;;;;;;;;:::o;607:90:18:-;395:22;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;1687:115:53:-;395:22:18;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:7:53;;;;;;;;;;;1358:8;1350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:4;1746:7;;:14;;;;;;;;;;;;;;;;;;1775:20;1782:12;:10;:12::i;:::-;1775:20;;;;;;;;;;;;;;;;;;;;;;1687:115::o;1828:95:2:-;1884:31;1904:10;1884:19;:31::i;:::-;1828:95::o;761:161:6:-;875:39;899:4;905:8;875:22;:39::i;:::-;761:161;;:::o;4269:81:5:-;4311:4;4334:7;;4327:14;;4269:81;:::o;4079:182::-;4139:4;4172:1;4164:4;:9;;4155:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4223:6;:12;4230:4;4223:12;;;;;;;;;;;:29;;;;;;;;;;;;4215:38;;4079:182;;;:::o;417:80:6:-;;;;;;;;;;;;;:::o;1178:96:1:-;1219:4;1243:23;1255:10;1243:7;:11;;:23;;;;:::i;:::-;1236:30;;1178:96;:::o;553:196:6:-;692:49;721:6;729:4;735:5;692:28;:49::i;:::-;553:196;;;:::o;287:179:0:-;335:10;356:17;405:10;:8;:10::i;:::-;397:18;;441:17;:15;:17::i;:::-;426:32;;287:179;;:::o;1472:110:2:-;1520:4;1544:30;1563:10;1544:14;:18;;:30;;;;:::i;:::-;1537:37;;1472:110;:::o;3706:178:5:-;3771:4;1987:12;2033:10;2002:41;;:6;:12;2009:4;2002:12;;;;;;;;;;;:27;;;;;;;;;;;;:41;;;1987:56;;2062:7;2054:16;;;;;;3804:1;3796:4;:9;;3787:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3868:8;3847:6;:12;3854:4;3847:12;;;;;;;;;;;:18;;:29;;;;3706:178;;;;:::o;2122:127:1:-;2181:23;2196:7;2181;:14;;:23;;;;:::i;:::-;2233:7;2220:21;;;;;;;;;;;;2122:127;:::o;779:200:15:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;1783:119:1:-;1839:20;1851:7;1839;:11;;:20;;;;:::i;:::-;1886:7;1875:19;;;;;;;;;;;;1783:119;:::o;3401:293:5:-;3500:4;2269:1;2236:6;:12;2243:4;2236:12;;;;;;;;;;;:29;;;:34;;2228:43;;;;;;3537:4;2392;2359:37;;:6;:12;2366:4;2359:12;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;;2351:46;;;;;;3580:22;3559:6;:12;3566:4;3559:12;;;;;;;;;;;:18;;;:43;;;;;;;;;;;;;;;;;;;;;;;;3643:10;3613:6;:12;3620:4;3613:12;;;;;;;;;;;:27;;;:40;;;;;;;;;;;;;;;;;;3671:15;3681:4;3671:15;;;;;;;;;;;;;;;;;;2282:1;3401:293;;:::o;791:88:7:-;836:7;862:10;855:17;;791:88;:::o;2133:140:2:-;2196:27;2215:7;2196:14;:18;;:27;;;;:::i;:::-;2257:7;2239:26;;;;;;;;;;;;2133:140;:::o;911:127:18:-;970:24;986:7;970:8;:15;;:24;;;;:::i;:::-;1023:7;1009:22;;;;;;;;;;;;911:127;:::o;786:119::-;842:21;855:7;842:8;:12;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;2493:148:2:-;2559:30;2581:7;2559:14;:21;;:30;;;;:::i;:::-;2625:7;2605:28;;;;;;;;;;;;2493:148;:::o;5387:876:5:-;5525:14;5586:1;5553:6;:12;5560:4;5553:12;;;;;;;;;;;:29;;;:34;5550:256;;;5615:8;5603:20;;5550:256;;;5686:1;5653:6;:12;5660:4;5653:12;;;;;;;;;;;:29;;;:34;5650:156;;5785:8;5715:6;:12;5722:4;5715:12;;;;;;;;;;;:23;;:58;5771:1;5739:6;:12;5746:4;5739:12;;;;;;;;;;;:29;;;:33;5715:58;;;;;;;;;;;:67;;;:78;5703:90;;5650:156;5550:256;5836:30;;:::i;:::-;5869:113;;;;;;;;5896:3;5869:113;;;;5914:8;5869:113;;;;5937:9;5869:113;;;;5961:10;5869:113;;;;;5836:146;;6149:10;6092:6;:12;6099:4;6092:12;;;;;;;;;;;:23;;:54;6116:6;:12;6123:4;6116:12;;;;;;;;;;;:29;;;6092:54;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6170:6;:12;6177:4;6170:12;;;;;;;;;;;:29;;;:32;;;;;;;;;;;;;6231:16;6242:4;6231:16;;;;;;;;;;;;;;;;;;5387:876;;;;:::o;2603:790::-;2698:9;2712:3;;2710:5;;;;;;;;;;2698:17;;2726:33;;:::i;:::-;2831:4;2810:14;:18;;:25;;;;;2869;2846:14;:20;;:48;;;;;;;;;;;;;;;;;;;;;;;2937:10;2905:14;:29;;:42;;;;;;;;;;;2990:10;2958:14;:29;;:42;;;;;;;;;;;3045:1;3011:14;:31;;:35;;;;;3080:6;3057:14;:20;;:29;;;;;3119:5;3097:14;:19;;:27;;;;3169:5;3135:14;:31;;:39;;;;;;;;;;;3200:14;3185:6;:12;3192:4;3185:12;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3225;3242:4;3249;3225:16;:29::i;:::-;3265:7;;:9;;;;;;;;;;;;;3367:18;3380:4;3367:18;;;;;;;;;;;;;;;;;;2603:790;;;;;:::o;510:180:15:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;359:1585:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/// Import main chains contracts\r\nimport \"./Product.sol\";\r\n//import \"./ProductDesign.sol\";\r\n\r\n/// Import Main Roles contract `Rolable.sol`\r\nimport \"./AccessControl/Rolable.sol\";\r\n\r\n/// Import Pausable contract from OpenZeppelin library\r\nimport \"./openzeppelin/contracts/lifecycle/Pausable.sol\";\r\n\r\n/// @title Supply Chain Contract\r\ncontract SupplyChain is Rolable, Pausable, Product {\r\n    address payable public taxCollector = 0xaC9cEF7d952a26b75777aB191213073cdB987Adb;//ACount3;\r\n    constructor() public {\r\n\r\n    }\r\n\r\n    function manufacturProductsLoud(uint _price, uint _tax, string memory _name)\r\n        public\r\n        //onlyManufacturer()\r\n    {\r\n        super.manufacturProductsLoud(_price, _tax, _name);\r\n    }\r\n    \r\n    function updateTaxHistory(uint _pID, uint _paidTax)\r\n        public\r\n        //onlyManufacturer()\r\n    {\r\n        super.updateTaxHistory( _pID, _paidTax);\r\n    }\r\n    \r\n\r\n    /// Function helps manufacturer to Pack a isManufactured Product Loud\r\n    function purchaseProduct (uint _pID)\r\n        public\r\n        payable\r\n        //onlyBuyer()\r\n        whenNotPaused()\r\n    {\r\n        uint price = pItems[_pID].price;\r\n        address payable sellerId = pItems[_pID].currentOwnerId;\r\n\r\n        //address payable retailerId = address(uint160(pItems[_pID].sellerId));\r\n        //uint retialerBounty = (price*5) /100;\r\n        uint lastTax = pItems[_pID].taxHistory[pItems[_pID].taxUpdateCounter-1].lastPaidTax ; \r\n        uint taxBounty = (price*9) /100 - lastTax ; \r\n\r\n        require(msg.value >= price+(price*9) /100, \"Not Enough!\");\r\n        uint amountToReturn = msg.value - (price + lastTax + taxBounty);\r\n        if (amountToReturn != 0)\r\n            address(msg.sender).transfer(amountToReturn);\r\n\r\n        super.purchaseProduct(_pID);\r\n        updateTaxHistory(_pID,taxBounty);\r\n        sellerId.transfer(price + lastTax);\r\n        taxCollector.transfer(taxBounty);\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "E:\\document\\blockchain\\myprojects\\simplevat\\contracts\\SupplyChain.sol",
  "ast": {
    "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/SupplyChain.sol",
    "exportedSymbols": {
      "SupplyChain": [
        1167
      ]
    },
    "id": 1168,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/Product.sol",
        "file": "./Product.sol",
        "id": 1006,
        "nodeType": "ImportDirective",
        "scope": 1168,
        "sourceUnit": 1004,
        "src": "61:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol",
        "file": "./AccessControl/Rolable.sol",
        "id": 1007,
        "nodeType": "ImportDirective",
        "scope": 1168,
        "sourceUnit": 27,
        "src": "167:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/lifecycle/Pausable.sol",
        "file": "./openzeppelin/contracts/lifecycle/Pausable.sol",
        "id": 1008,
        "nodeType": "ImportDirective",
        "scope": 1168,
        "sourceUnit": 6443,
        "src": "264:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1009,
              "name": "Rolable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26,
              "src": "383:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Rolable_$26",
                "typeString": "contract Rolable"
              }
            },
            "id": 1010,
            "nodeType": "InheritanceSpecifier",
            "src": "383:7:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1011,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6442,
              "src": "392:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$6442",
                "typeString": "contract Pausable"
              }
            },
            "id": 1012,
            "nodeType": "InheritanceSpecifier",
            "src": "392:8:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1013,
              "name": "Product",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1003,
              "src": "402:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Product_$1003",
                "typeString": "contract Product"
              }
            },
            "id": 1014,
            "nodeType": "InheritanceSpecifier",
            "src": "402:7:6"
          }
        ],
        "contractDependencies": [
          139,
          252,
          1003,
          1194,
          2698,
          26,
          6442
        ],
        "contractKind": "contract",
        "documentation": "@title Supply Chain Contract",
        "fullyImplemented": true,
        "id": 1167,
        "linearizedBaseContracts": [
          1167,
          1003,
          6442,
          2698,
          1194,
          26,
          252,
          139
        ],
        "name": "SupplyChain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1017,
            "name": "taxCollector",
            "nodeType": "VariableDeclaration",
            "scope": 1167,
            "src": "417:80:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "417:15:6",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307861433963454637643935326132366237353737376142313931323133303733636442393837416462",
              "id": 1016,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "455:42:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xaC9cEF7d952a26b75777aB191213073cdB987Adb"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1020,
              "nodeType": "Block",
              "src": "535:10:6",
              "statements": []
            },
            "documentation": null,
            "id": 1021,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:6"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:6"
            },
            "scope": 1167,
            "src": "514:31:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "681:68:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1033,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "721:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1034,
                        "name": "_tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "729:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1035,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "735:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1030,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15329,
                        "src": "692:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SupplyChain_$1167",
                          "typeString": "contract super SupplyChain"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "manufacturProductsLoud",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 588,
                      "src": "692:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "692:49:6"
                }
              ]
            },
            "documentation": null,
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "manufacturProductsLoud",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "585:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "name": "_tax",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "598:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "609:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:45:6"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:6"
            },
            "scope": 1167,
            "src": "553:196:6",
            "stateMutability": "nonpayable",
            "superFunction": 588,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "864:58:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1049,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "899:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "_paidTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "905:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1046,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15329,
                        "src": "875:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SupplyChain_$1167",
                          "typeString": "contract super SupplyChain"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateTaxHistory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 868,
                      "src": "875:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "875:39:6"
                }
              ]
            },
            "documentation": null,
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTaxHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "name": "_pID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "787:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "name": "_paidTax",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "798:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "786:26:6"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:6"
            },
            "scope": 1167,
            "src": "761:161:6",
            "stateMutability": "nonpayable",
            "superFunction": 868,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "1134:805:6",
              "statements": [
                {
                  "assignments": [
                    1062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1062,
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1145:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1061,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1145:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1067,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "pItems",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "1158:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                          "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                        }
                      },
                      "id": 1065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1165:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1158:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                        "typeString": "struct Product.ProductItem storage ref"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 371,
                    "src": "1158:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:31:6"
                },
                {
                  "assignments": [
                    1069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1069,
                      "name": "sellerId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1187:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1187:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1074,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1070,
                        "name": "pItems",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "1214:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                          "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                        }
                      },
                      "id": 1072,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1221:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1214:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                        "typeString": "struct Product.ProductItem storage ref"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentOwnerId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 367,
                    "src": "1214:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1187:54:6"
                },
                {
                  "assignments": [
                    1076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1076,
                      "name": "lastTax",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1384:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1075,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1384:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1077,
                            "name": "pItems",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1399:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                              "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                            }
                          },
                          "id": 1079,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1078,
                            "name": "_pID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1056,
                            "src": "1406:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1399:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                            "typeString": "struct Product.ProductItem storage ref"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "taxHistory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 375,
                        "src": "1399:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TaxUpdateOpj_$359_storage_$",
                          "typeString": "mapping(uint256 => struct Product.TaxUpdateOpj storage ref)"
                        }
                      },
                      "id": 1087,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1081,
                              "name": "pItems",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1423:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                                "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                              }
                            },
                            "id": 1083,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1082,
                              "name": "_pID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "1430:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1423:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                              "typeString": "struct Product.ProductItem storage ref"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "taxUpdateCounter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 377,
                          "src": "1423:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1453:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1423:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1399:56:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaxUpdateOpj_$359_storage",
                        "typeString": "struct Product.TaxUpdateOpj storage ref"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "lastPaidTax",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 354,
                    "src": "1399:68:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1384:83:6"
                },
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "name": "taxBounty",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1480:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1100,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1092,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "1498:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1504:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "src": "1498:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1095,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1497:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1508:3:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "1497:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1098,
                      "name": "lastTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "1514:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1497:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1480:41:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1102,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15298,
                            "src": "1544:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1544:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1104,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1557:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1105,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1062,
                                    "src": "1564:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "39",
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1570:1:6",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    },
                                    "value": "9"
                                  },
                                  "src": "1564:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1108,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1563:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1574:3:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "1563:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1557:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1544:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420456e6f75676821",
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1579:13:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01aa264110b45889fb58214020f1bfc90b72c0abf0d4f7c65d9004e519af0e63",
                          "typeString": "literal_string \"Not Enough!\""
                        },
                        "value": "Not Enough!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01aa264110b45889fb58214020f1bfc90b72c0abf0d4f7c65d9004e519af0e63",
                          "typeString": "literal_string \"Not Enough!\""
                        }
                      ],
                      "id": 1101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15301,
                        15302
                      ],
                      "referencedDeclaration": 15302,
                      "src": "1536:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1536:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:57:6"
                },
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "name": "amountToReturn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1604:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1127,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15298,
                        "src": "1626:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1626:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1120,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "1639:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1121,
                              "name": "lastTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "1647:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1639:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1123,
                            "name": "taxBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "1657:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1639:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1125,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1638:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1626:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:63:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1128,
                      "name": "amountToReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "1682:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1700:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1682:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1139,
                  "nodeType": "IfStatement",
                  "src": "1678:82:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1136,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1117,
                          "src": "1745:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1132,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15298,
                                "src": "1724:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1724:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1716:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1716:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1716:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1716:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1138,
                    "nodeType": "ExpressionStatement",
                    "src": "1716:44:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1143,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1795:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15329,
                        "src": "1773:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SupplyChain_$1167",
                          "typeString": "contract super SupplyChain"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purchaseProduct",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 620,
                      "src": "1773:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1147,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1828:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1148,
                        "name": "taxBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1833:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1146,
                      "name": "updateTaxHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1054
                      ],
                      "referencedDeclaration": 1054,
                      "src": "1811:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:32:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1154,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1062,
                          "src": "1872:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1155,
                          "name": "lastTax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1076,
                          "src": "1880:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1872:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1151,
                        "name": "sellerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "1854:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1854:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "taxBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1921:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1159,
                        "name": "taxCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "1899:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1899:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:32:6"
                }
              ]
            },
            "documentation": "Function helps manufacturer to Pack a isManufactured Product Loud",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1059,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1058,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6398,
                  "src": "1113:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1113:15:6"
              }
            ],
            "name": "purchaseProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "name": "_pID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "1037:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1036:11:6"
            },
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:6"
            },
            "scope": 1167,
            "src": "1011:928:6",
            "stateMutability": "payable",
            "superFunction": 620,
            "visibility": "public"
          }
        ],
        "scope": 1168,
        "src": "359:1585:6"
      }
    ],
    "src": "0:1946:6"
  },
  "legacyAST": {
    "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/SupplyChain.sol",
    "exportedSymbols": {
      "SupplyChain": [
        1167
      ]
    },
    "id": 1168,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/Product.sol",
        "file": "./Product.sol",
        "id": 1006,
        "nodeType": "ImportDirective",
        "scope": 1168,
        "sourceUnit": 1004,
        "src": "61:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol",
        "file": "./AccessControl/Rolable.sol",
        "id": 1007,
        "nodeType": "ImportDirective",
        "scope": 1168,
        "sourceUnit": 27,
        "src": "167:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/lifecycle/Pausable.sol",
        "file": "./openzeppelin/contracts/lifecycle/Pausable.sol",
        "id": 1008,
        "nodeType": "ImportDirective",
        "scope": 1168,
        "sourceUnit": 6443,
        "src": "264:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1009,
              "name": "Rolable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26,
              "src": "383:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Rolable_$26",
                "typeString": "contract Rolable"
              }
            },
            "id": 1010,
            "nodeType": "InheritanceSpecifier",
            "src": "383:7:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1011,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6442,
              "src": "392:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$6442",
                "typeString": "contract Pausable"
              }
            },
            "id": 1012,
            "nodeType": "InheritanceSpecifier",
            "src": "392:8:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1013,
              "name": "Product",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1003,
              "src": "402:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Product_$1003",
                "typeString": "contract Product"
              }
            },
            "id": 1014,
            "nodeType": "InheritanceSpecifier",
            "src": "402:7:6"
          }
        ],
        "contractDependencies": [
          139,
          252,
          1003,
          1194,
          2698,
          26,
          6442
        ],
        "contractKind": "contract",
        "documentation": "@title Supply Chain Contract",
        "fullyImplemented": true,
        "id": 1167,
        "linearizedBaseContracts": [
          1167,
          1003,
          6442,
          2698,
          1194,
          26,
          252,
          139
        ],
        "name": "SupplyChain",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1017,
            "name": "taxCollector",
            "nodeType": "VariableDeclaration",
            "scope": 1167,
            "src": "417:80:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "417:15:6",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307861433963454637643935326132366237353737376142313931323133303733636442393837416462",
              "id": 1016,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "455:42:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xaC9cEF7d952a26b75777aB191213073cdB987Adb"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1020,
              "nodeType": "Block",
              "src": "535:10:6",
              "statements": []
            },
            "documentation": null,
            "id": 1021,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:2:6"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:6"
            },
            "scope": 1167,
            "src": "514:31:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "681:68:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1033,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "721:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1034,
                        "name": "_tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "729:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1035,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "735:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1030,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15329,
                        "src": "692:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SupplyChain_$1167",
                          "typeString": "contract super SupplyChain"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "manufacturProductsLoud",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 588,
                      "src": "692:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "692:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "692:49:6"
                }
              ]
            },
            "documentation": null,
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "manufacturProductsLoud",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "585:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "name": "_tax",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "598:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "609:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:45:6"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:6"
            },
            "scope": 1167,
            "src": "553:196:6",
            "stateMutability": "nonpayable",
            "superFunction": 588,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "864:58:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1049,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "899:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "_paidTax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "905:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1046,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15329,
                        "src": "875:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SupplyChain_$1167",
                          "typeString": "contract super SupplyChain"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateTaxHistory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 868,
                      "src": "875:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "875:39:6"
                }
              ]
            },
            "documentation": null,
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTaxHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "name": "_pID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "787:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "name": "_paidTax",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "798:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "786:26:6"
            },
            "returnParameters": {
              "id": 1045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:0:6"
            },
            "scope": 1167,
            "src": "761:161:6",
            "stateMutability": "nonpayable",
            "superFunction": 868,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "1134:805:6",
              "statements": [
                {
                  "assignments": [
                    1062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1062,
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1145:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1061,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1145:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1067,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1063,
                        "name": "pItems",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "1158:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                          "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                        }
                      },
                      "id": 1065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1165:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1158:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                        "typeString": "struct Product.ProductItem storage ref"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 371,
                    "src": "1158:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:31:6"
                },
                {
                  "assignments": [
                    1069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1069,
                      "name": "sellerId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1187:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1187:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1074,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1070,
                        "name": "pItems",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "1214:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                          "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                        }
                      },
                      "id": 1072,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1071,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1221:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1214:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                        "typeString": "struct Product.ProductItem storage ref"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentOwnerId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 367,
                    "src": "1214:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1187:54:6"
                },
                {
                  "assignments": [
                    1076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1076,
                      "name": "lastTax",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1384:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1075,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1384:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1077,
                            "name": "pItems",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "1399:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                              "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                            }
                          },
                          "id": 1079,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1078,
                            "name": "_pID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1056,
                            "src": "1406:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1399:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                            "typeString": "struct Product.ProductItem storage ref"
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "taxHistory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 375,
                        "src": "1399:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TaxUpdateOpj_$359_storage_$",
                          "typeString": "mapping(uint256 => struct Product.TaxUpdateOpj storage ref)"
                        }
                      },
                      "id": 1087,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1081,
                              "name": "pItems",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1423:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductItem_$380_storage_$",
                                "typeString": "mapping(uint256 => struct Product.ProductItem storage ref)"
                              }
                            },
                            "id": 1083,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1082,
                              "name": "_pID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "1430:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1423:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProductItem_$380_storage",
                              "typeString": "struct Product.ProductItem storage ref"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "taxUpdateCounter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 377,
                          "src": "1423:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1453:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1423:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1399:56:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaxUpdateOpj_$359_storage",
                        "typeString": "struct Product.TaxUpdateOpj storage ref"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "lastPaidTax",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 354,
                    "src": "1399:68:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1384:83:6"
                },
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "name": "taxBounty",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1480:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1100,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1092,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "1498:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "39",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1504:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9_by_1",
                                "typeString": "int_const 9"
                              },
                              "value": "9"
                            },
                            "src": "1498:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1095,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1497:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1508:3:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "1497:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1098,
                      "name": "lastTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "1514:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1497:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1480:41:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1102,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15298,
                            "src": "1544:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1544:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1104,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1557:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1105,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1062,
                                    "src": "1564:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "39",
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1570:1:6",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    },
                                    "value": "9"
                                  },
                                  "src": "1564:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1108,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1563:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "313030",
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1574:3:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "1563:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1557:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1544:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420456e6f75676821",
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1579:13:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01aa264110b45889fb58214020f1bfc90b72c0abf0d4f7c65d9004e519af0e63",
                          "typeString": "literal_string \"Not Enough!\""
                        },
                        "value": "Not Enough!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01aa264110b45889fb58214020f1bfc90b72c0abf0d4f7c65d9004e519af0e63",
                          "typeString": "literal_string \"Not Enough!\""
                        }
                      ],
                      "id": 1101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15301,
                        15302
                      ],
                      "referencedDeclaration": 15302,
                      "src": "1536:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1536:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:57:6"
                },
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "name": "amountToReturn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "1604:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1127,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15298,
                        "src": "1626:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1626:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 1120,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "1639:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1121,
                              "name": "lastTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "1647:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1639:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1123,
                            "name": "taxBounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "1657:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1639:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1125,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1638:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1626:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:63:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1128,
                      "name": "amountToReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1117,
                      "src": "1682:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1700:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1682:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1139,
                  "nodeType": "IfStatement",
                  "src": "1678:82:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1136,
                          "name": "amountToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1117,
                          "src": "1745:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1132,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15298,
                                "src": "1724:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1724:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1716:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1716:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1716:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1716:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1138,
                    "nodeType": "ExpressionStatement",
                    "src": "1716:44:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1143,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1795:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15329,
                        "src": "1773:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SupplyChain_$1167",
                          "typeString": "contract super SupplyChain"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purchaseProduct",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 620,
                      "src": "1773:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1147,
                        "name": "_pID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "1828:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1148,
                        "name": "taxBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1833:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1146,
                      "name": "updateTaxHistory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1054
                      ],
                      "referencedDeclaration": 1054,
                      "src": "1811:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:32:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1154,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1062,
                          "src": "1872:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1155,
                          "name": "lastTax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1076,
                          "src": "1880:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1872:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1151,
                        "name": "sellerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "1854:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1854:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "taxBounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "1921:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1159,
                        "name": "taxCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "1899:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1899:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "1899:32:6"
                }
              ]
            },
            "documentation": "Function helps manufacturer to Pack a isManufactured Product Loud",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1059,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1058,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6398,
                  "src": "1113:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1113:15:6"
              }
            ],
            "name": "purchaseProduct",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "name": "_pID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "1037:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1036:11:6"
            },
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:6"
            },
            "scope": 1167,
            "src": "1011:928:6",
            "stateMutability": "payable",
            "superFunction": 620,
            "visibility": "public"
          }
        ],
        "scope": 1168,
        "src": "359:1585:6"
      }
    ],
    "src": "0:1946:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-05T05:17:31.361Z",
  "devdoc": {
    "methods": {
      "amIBuyer()": {
        "return": "boolean for caller address state in `_Buyers` Role"
      },
      "amIManufacturer()": {
        "return": "boolean for caller address state in `_manufacturers` Role"
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      },
      "whoAmI()": {
        "return": "array contining every role with its state as boolean"
      }
    },
    "title": "Supply Chain Contract"
  },
  "userdoc": {
    "methods": {
      "assignMeAsBuyer()": {
        "notice": "Function to assign caller `msg.sender` to Buyer role"
      },
      "assignMeAsManufacturer()": {
        "notice": "Function to assign caller `msg.sender` to manufacturer role"
      },
      "isBuyer(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "isManufacturer(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "purchaseProduct(uint256)": {
        "notice": "Function helps manufacturer to Pack a isManufactured Product Loud"
      },
      "renounceMeFromBuyer()": {
        "notice": "Function to renounce caller `msg.sender` from Buyer role"
      },
      "renounceMeFromManufacturer()": {
        "notice": "Function to renounce caller `msg.sender` from manufacturer role"
      }
    }
  }
}