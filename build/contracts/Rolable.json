{
  "contractName": "Rolable",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isManufacturer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsManufacturer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIDesigner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromSeller",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromManufacturer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsDesigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isDesigner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsSeller",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amISeller",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIManufacturer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromDesigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isSeller",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SellerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "SellerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "DesignerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "DesignerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ManufacturerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ManufacturerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "whoAmI",
      "outputs": [
        {
          "name": "Buyer",
          "type": "bool"
        },
        {
          "name": "Seller",
          "type": "bool"
        },
        {
          "name": "manufacturer",
          "type": "bool"
        },
        {
          "name": "designer",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromBuyer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isManufacturer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsBuyer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsManufacturer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIDesigner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromSeller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromManufacturer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsDesigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isDesigner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsSeller\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amISeller\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoAmI\",\"outputs\":[{\"name\":\"Buyer\",\"type\":\"bool\"},{\"name\":\"Seller\",\"type\":\"bool\"},{\"name\":\"manufacturer\",\"type\":\"bool\"},{\"name\":\"designer\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIManufacturer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromDesigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSeller\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SellerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"SellerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"DesignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"DesignerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"amIBuyer()\":{\"return\":\"boolean for caller address state in `_Buyers` Role\"},\"amIDesigner()\":{\"return\":\"boolean for caller address state in `_designers` Role\"},\"amIManufacturer()\":{\"return\":\"boolean for caller address state in `_manufacturers` Role\"},\"amISeller()\":{\"return\":\"boolean for caller address state in `_Sellers` Role\"},\"whoAmI()\":{\"return\":\"array contining every role with its state as boolean\"}}},\"userdoc\":{\"methods\":{\"assignMeAsBuyer()\":{\"notice\":\"Function to assign caller `msg.sender` to Buyer role\"},\"assignMeAsDesigner()\":{\"notice\":\"designer allways should be a menufacturer, after checking isManufacturer add it if not\"},\"assignMeAsManufacturer()\":{\"notice\":\"Function to assign caller `msg.sender` to manufacturer role\"},\"assignMeAsSeller()\":{\"notice\":\"Function to assign caller `msg.sender` to Seller role\"},\"isBuyer(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"isDesigner(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"isManufacturer(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"isSeller(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"renounceMeFromBuyer()\":{\"notice\":\"Function to renounce caller `msg.sender` from Buyer role\"},\"renounceMeFromDesigner()\":{\"notice\":\"Function to renounce caller `msg.sender` from designer role\"},\"renounceMeFromManufacturer()\":{\"notice\":\"Function to renounce caller `msg.sender` from manufacturer role\"},\"renounceMeFromSeller()\":{\"notice\":\"Function to renounce caller `msg.sender` from Seller role\"}}}},\"settings\":{\"compilationTarget\":{\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol\":\"Rolable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol\":{\"keccak256\":\"0x643e0ffbef00c182166b55af6517779c5cb1fd0a360af8545d4c3be4820f1080\",\"urls\":[\"bzzr://bdec8fd13417bc8ed996c652b0514895516f27c1080b6849b8c543cf3e45c51a\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol\":{\"keccak256\":\"0x112222c33b798cda8c39b84f7c87d0ec3e8e75b3fe7b49f24cb72fd059b5d819\",\"urls\":[\"bzzr://9dcca2e90c10b0666f5a1cccc4201cd012ed903348437430569730b7f837b129\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Designer.sol\":{\"keccak256\":\"0x59ae12cd28bc330cf0c66932ee0d6376ed5eb91730810ccb7c8b00cf8f37c3aa\",\"urls\":[\"bzzr://2bf59805d3b9094492b140648d90be68f13096ba1950f8139006e581404b8d71\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol\":{\"keccak256\":\"0xc4213c1333c5e3d1043cc3ae92ffc7afb5407ed64451b6cec2a67c2624a8881d\",\"urls\":[\"bzzr://321cb4330a82d16ff4bd73393b8582f26ab95c5ea4fa6f0e810ed3c20eac3385\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Seller.sol\":{\"keccak256\":\"0xe7d24ac3dc37fcf605fad505b784f8b343d9ea4b2932cb455970a20be34bf846\",\"urls\":[\"bzzr://68a97db082a217766c159b01f7a75f86c8a7596c0e173c9e1ee29ee040363e85\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]}},\"version\":1}",
  "bytecode": "0x608060405262000015336200004e60201b60201c565b6200002633620000af60201b60201c565b62000037336200011060201b60201c565b62000048336200017160201b60201c565b62000396565b62000069816000620001d260201b620009891790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b620000ca816001620001d260201b620009891790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b6200012b816002620001d260201b620009891790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f97069a05372df648feb174cc125711b2c72a81450a1ab2769c8faf49917d7fd260405160405180910390a250565b6200018c816003620001d260201b620009891790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f3d78526f2568d430fd8e20719601f7bc3f979936f8880236cc284e8127251b4260405160405180910390a250565b620001e48282620002b660201b60201c565b1562000258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200033f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062000e796022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610ad380620003a66000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a4a418b1116100a2578063c40f1bdc11610071578063c40f1bdc146102ae578063da91254c146102d0578063e1d6f86f14610313578063eda0baa814610335578063ee95feaf1461033f5761010b565b8063a4a418b11461021c578063a4f03e2314610226578063b60eedbb14610282578063bccd24621461028c5761010b565b806348c149bd116100de57806348c149bd146101dc5780635ec5b728146101e65780639741d15014610208578063a40e210f146102125761010b565b806307e3c3031461011057806317d4a4911461011a5780632a55feec1461017657806335db95e5146101d2575b600080fd5b61011861039b565b005b61015c6004803603602081101561013057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a6565b604051808215151515815260200191505060405180910390f35b6101b86004803603602081101561018c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c3565b604051808215151515815260200191505060405180910390f35b6101da6103e0565b005b6101e46103eb565b005b6101ee6103f6565b604051808215151515815260200191505060405180910390f35b610210610411565b005b61021a61041c565b005b610224610427565b005b6102686004803603602081101561023c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610449565b604051808215151515815260200191505060405180910390f35b61028a610466565b005b610294610471565b604051808215151515815260200191505060405180910390f35b6102b661048c565b604051808215151515815260200191505060405180910390f35b6102d86104a7565b604051808515151515815260200184151515158152602001831515151581526020018215151515815260200194505050505060405180910390f35b61031b6104db565b604051808215151515815260200191505060405180910390f35b61033d6104f6565b005b6103816004803603602081101561035557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610501565b604051808215151515815260200191505060405180910390f35b6103a43361051e565b565b60006103bc82600161057890919063ffffffff16565b9050919050565b60006103d982600061057890919063ffffffff16565b9050919050565b6103e933610656565b565b6103f4336106b0565b565b600061040c33600261057890919063ffffffff16565b905090565b61041a3361070a565b565b61042533610764565b565b610430336107be565b610439336103a6565b61044757610446336106b0565b5b565b600061045f82600261057890919063ffffffff16565b9050919050565b61046f33610818565b565b600061048733600361057890919063ffffffff16565b905090565b60006104a233600061057890919063ffffffff16565b905090565b6000806000806104b561048c565b93506104bf610471565b92506104c96104db565b91506104d36103f6565b905090919293565b60006104f133600161057890919063ffffffff16565b905090565b6104ff33610872565b565b600061051782600361057890919063ffffffff16565b9050919050565b6105328160006108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610a866022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61066a81600061098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b6106c481600161098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b61071e8160036108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa6f3b3030df964d974376ba4db21cbe49207bd79998f0d619c1c3a422259707f60405160405180910390a250565b6107788160016108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b6107d281600261098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f97069a05372df648feb174cc125711b2c72a81450a1ab2769c8faf49917d7fd260405160405180910390a250565b61082c81600361098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3d78526f2568d430fd8e20719601f7bc3f979936f8880236cc284e8127251b4260405160405180910390a250565b6108868160026108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe16181bbb8b138f88a23696ae25f2c63713913e3fc6922b234a08639bf53cbea60405160405180910390a250565b6108d68282610578565b61092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610a656021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6109938282610578565b15610a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a72305820ca2efdc2f9acdc036140d7841c8c3e47164bc69b44c52cac8e78748fd0dbe5be0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a4a418b1116100a2578063c40f1bdc11610071578063c40f1bdc146102ae578063da91254c146102d0578063e1d6f86f14610313578063eda0baa814610335578063ee95feaf1461033f5761010b565b8063a4a418b11461021c578063a4f03e2314610226578063b60eedbb14610282578063bccd24621461028c5761010b565b806348c149bd116100de57806348c149bd146101dc5780635ec5b728146101e65780639741d15014610208578063a40e210f146102125761010b565b806307e3c3031461011057806317d4a4911461011a5780632a55feec1461017657806335db95e5146101d2575b600080fd5b61011861039b565b005b61015c6004803603602081101561013057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a6565b604051808215151515815260200191505060405180910390f35b6101b86004803603602081101561018c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c3565b604051808215151515815260200191505060405180910390f35b6101da6103e0565b005b6101e46103eb565b005b6101ee6103f6565b604051808215151515815260200191505060405180910390f35b610210610411565b005b61021a61041c565b005b610224610427565b005b6102686004803603602081101561023c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610449565b604051808215151515815260200191505060405180910390f35b61028a610466565b005b610294610471565b604051808215151515815260200191505060405180910390f35b6102b661048c565b604051808215151515815260200191505060405180910390f35b6102d86104a7565b604051808515151515815260200184151515158152602001831515151581526020018215151515815260200194505050505060405180910390f35b61031b6104db565b604051808215151515815260200191505060405180910390f35b61033d6104f6565b005b6103816004803603602081101561035557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610501565b604051808215151515815260200191505060405180910390f35b6103a43361051e565b565b60006103bc82600161057890919063ffffffff16565b9050919050565b60006103d982600061057890919063ffffffff16565b9050919050565b6103e933610656565b565b6103f4336106b0565b565b600061040c33600261057890919063ffffffff16565b905090565b61041a3361070a565b565b61042533610764565b565b610430336107be565b610439336103a6565b61044757610446336106b0565b5b565b600061045f82600261057890919063ffffffff16565b9050919050565b61046f33610818565b565b600061048733600361057890919063ffffffff16565b905090565b60006104a233600061057890919063ffffffff16565b905090565b6000806000806104b561048c565b93506104bf610471565b92506104c96104db565b91506104d36103f6565b905090919293565b60006104f133600161057890919063ffffffff16565b905090565b6104ff33610872565b565b600061051782600361057890919063ffffffff16565b9050919050565b6105328160006108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610a866022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61066a81600061098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b6106c481600161098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b61071e8160036108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa6f3b3030df964d974376ba4db21cbe49207bd79998f0d619c1c3a422259707f60405160405180910390a250565b6107788160016108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b6107d281600261098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f97069a05372df648feb174cc125711b2c72a81450a1ab2769c8faf49917d7fd260405160405180910390a250565b61082c81600361098990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f3d78526f2568d430fd8e20719601f7bc3f979936f8880236cc284e8127251b4260405160405180910390a250565b6108868160026108cc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe16181bbb8b138f88a23696ae25f2c63713913e3fc6922b234a08639bf53cbea60405160405180910390a250565b6108d68282610578565b61092b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610a656021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6109938282610578565b15610a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a72305820ca2efdc2f9acdc036140d7841c8c3e47164bc69b44c52cac8e78748fd0dbe5be0029",
  "sourceMap": "180:468:0:-;;;442:21:1;452:10;442:9;;;:21;;:::i;:::-;658:28:3;675:10;658:16;;;:28;;:::i;:::-;612:24:2;625:10;612:12;;;:24;;:::i;:::-;881:22:4;892:10;881;;;:22;;:::i;:::-;180:468:0;;1783:119:1;1839:20;1851:7;1839;:11;;;;;;:20;;;;:::i;:::-;1886:7;1875:19;;;;;;;;;;;;1783:119;:::o;2133:140:3:-;2196:27;2215:7;2196:14;:18;;;;;;:27;;;;:::i;:::-;2257:7;2239:26;;;;;;;;;;;;2133:140;:::o;2199:128:2:-;2258:23;2273:7;2258:10;:14;;;;;;:23;;;;:::i;:::-;2311:7;2297:22;;;;;;;;;;;;2199:128;:::o;2241:122:4:-;2298:21;2311:7;2298:8;:12;;;;;;:21;;;;:::i;:::-;2347:7;2335:20;;;;;;;;;;;;2241:122;:::o;260:175:18:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;180:468:0:-;;;;;;;",
  "deployedSourceMap": "180:468:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;180:468:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:81:1;;;:::i;:::-;;1193:121:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1193:121:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;927:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;927:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1344:74;;;:::i;:::-;;1659:88:3;;;:::i;:::-;;1382:102:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1948:83:4;;;:::i;:::-;;1828:95:3;;;:::i;:::-;;1660:165:2;;;:::i;:::-;;1119:113;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1119:113:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1797:76:4;;;:::i;:::-;;1628:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1178:96:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;354:291:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:110:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1902:87:2;;;:::i;:::-;;1373:109:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1373:109:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1492:81:1;1541:24;1554:10;1541:12;:24::i;:::-;1492:81::o;1193:121:3:-;1255:4;1279:27;1298:7;1279:14;:18;;:27;;;;:::i;:::-;1272:34;;1193:121;;;:::o;927:107:1:-;982:4;1006:20;1018:7;1006;:11;;:20;;;;:::i;:::-;999:27;;927:107;;;:::o;1344:74::-;1389:21;1399:10;1389:9;:21::i;:::-;1344:74::o;1659:88:3:-;1711:28;1728:10;1711:16;:28::i;:::-;1659:88::o;1382:102:2:-;1426:4;1450:26;1465:10;1450;:14;;:26;;;;:::i;:::-;1443:33;;1382:102;:::o;1948:83:4:-;1998:25;2012:10;1998:13;:25::i;:::-;1948:83::o;1828:95:3:-;1884:31;1904:10;1884:19;:31::i;:::-;1828:95::o;1660:165:2:-;1708:24;1721:10;1708:12;:24::i;:::-;1748:26;1763:10;1748:14;:26::i;:::-;1743:74;;1789:28;1806:10;1789:16;:28::i;:::-;1743:74;1660:165::o;1119:113::-;1177:4;1201:23;1216:7;1201:10;:14;;:23;;;;:::i;:::-;1194:30;;1119:113;;;:::o;1797:76:4:-;1843:22;1854:10;1843;:22::i;:::-;1797:76::o;1628:98::-;1670:4;1694:24;1707:10;1694:8;:12;;:24;;;;:::i;:::-;1687:31;;1628:98;:::o;1178:96:1:-;1219:4;1243:23;1255:10;1243:7;:11;;:23;;;;:::i;:::-;1236:30;;1178:96;:::o;354:291:0:-;402:10;423:11;445:17;473:13;518:10;:8;:10::i;:::-;510:18;;548:11;:9;:11::i;:::-;539:20;;585:17;:15;:17::i;:::-;570:32;;624:13;:11;:13::i;:::-;613:24;;354:291;;;;:::o;1472:110:3:-;1520:4;1544:30;1563:10;1544:14;:18;;:30;;;;:::i;:::-;1537:37;;1472:110;:::o;1902:87:2:-;1954:27;1970:10;1954:15;:27::i;:::-;1902:87::o;1373:109:4:-;1429:4;1453:21;1466:7;1453:8;:12;;:21;;;;:::i;:::-;1446:28;;1373:109;;;:::o;2122:127:1:-;2181:23;2196:7;2181;:14;;:23;;;;:::i;:::-;2233:7;2220:21;;;;;;;;;;;;2122:127;:::o;779:200:18:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;1783:119:1:-;1839:20;1851:7;1839;:11;;:20;;;;:::i;:::-;1886:7;1875:19;;;;;;;;;;;;1783:119;:::o;2133:140:3:-;2196:27;2215:7;2196:14;:18;;:27;;;;:::i;:::-;2257:7;2239:26;;;;;;;;;;;;2133:140;:::o;2583:130:4:-;2643:24;2659:7;2643:8;:15;;:24;;;;:::i;:::-;2697:7;2683:22;;;;;;;;;;;;2583:130;:::o;2493:148:3:-;2559:30;2581:7;2559:14;:21;;:30;;;;:::i;:::-;2625:7;2605:28;;;;;;;;;;;;2493:148;:::o;2199:128:2:-;2258:23;2273:7;2258:10;:14;;:23;;;;:::i;:::-;2311:7;2297:22;;;;;;;;;;;;2199:128;:::o;2241:122:4:-;2298:21;2311:7;2298:8;:12;;:21;;;;:::i;:::-;2347:7;2335:20;;;;;;;;;;;;2241:122;:::o;2547:136:2:-;2609:26;2627:7;2609:10;:17;;:26;;;;:::i;:::-;2667:7;2651:24;;;;;;;;;;;;2547:136;:::o;510:180:18:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/// Import all Roles\r\nimport \"./Roles/Buyer.sol\";\r\nimport \"./Roles/Designer.sol\";\r\nimport \"./Roles/Seller.sol\";\r\nimport \"./Roles/Manufacturer.sol\";\r\n\r\n\r\ncontract Rolable is Buyer, Designer, Seller{\r\n\r\n    /// Function to check all roles for the caller\r\n    /// @return array contining every role with its state as boolean\r\n    function whoAmI() public view returns(\r\n        bool Buyer,\r\n        bool Seller,\r\n        bool manufacturer,\r\n        bool designer\r\n    )\r\n    {\r\n        Buyer = amIBuyer();\r\n        Seller = amISeller();\r\n        manufacturer = amIManufacturer();\r\n        designer = amIDesigner();\r\n    }\r\n}\r\n",
  "sourcePath": "E:\\document\\blockchain\\myprojects\\simplevat\\contracts\\AccessControl\\Rolable.sol",
  "ast": {
    "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol",
    "exportedSymbols": {
      "Rolable": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol",
        "file": "./Roles/Buyer.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 158,
        "src": "49:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Designer.sol",
        "file": "./Roles/Designer.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 285,
        "src": "78:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Seller.sol",
        "file": "./Roles/Seller.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 511,
        "src": "110:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol",
        "file": "./Roles/Manufacturer.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 398,
        "src": "140:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Buyer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 157,
              "src": "200:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Buyer_$157",
                "typeString": "contract Buyer"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "200:5:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Designer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 284,
              "src": "207:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Designer_$284",
                "typeString": "contract Designer"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "207:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Seller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 510,
              "src": "217:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Seller_$510",
                "typeString": "contract Seller"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "217:6:0"
          }
        ],
        "contractDependencies": [
          397,
          284,
          510,
          157
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44,
          510,
          284,
          397,
          157
        ],
        "name": "Rolable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "499:146:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "Buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "510:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23,
                        "name": "amIBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "518:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "518:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "510:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "510:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "Seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "539:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28,
                        "name": "amISeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "548:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "548:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "539:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "539:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "manufacturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "570:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33,
                        "name": "amIManufacturer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "585:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "570:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "570:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "designer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "613:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 38,
                        "name": "amIDesigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "624:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "624:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "613:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "613:24:0"
                }
              ]
            },
            "documentation": "@return array contining every role with its state as boolean",
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoAmI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "Buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "402:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "Seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "423:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "manufacturer",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "445:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "name": "designer",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "473:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:102:0"
            },
            "scope": 44,
            "src": "354:291:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 45,
        "src": "180:468:0"
      }
    ],
    "src": "0:650:0"
  },
  "legacyAST": {
    "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol",
    "exportedSymbols": {
      "Rolable": [
        44
      ]
    },
    "id": 45,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol",
        "file": "./Roles/Buyer.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 158,
        "src": "49:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Designer.sol",
        "file": "./Roles/Designer.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 285,
        "src": "78:30:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Seller.sol",
        "file": "./Roles/Seller.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 511,
        "src": "110:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol",
        "file": "./Roles/Manufacturer.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 45,
        "sourceUnit": 398,
        "src": "140:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Buyer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 157,
              "src": "200:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Buyer_$157",
                "typeString": "contract Buyer"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "200:5:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Designer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 284,
              "src": "207:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Designer_$284",
                "typeString": "contract Designer"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "207:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Seller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 510,
              "src": "217:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Seller_$510",
                "typeString": "contract Seller"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "217:6:0"
          }
        ],
        "contractDependencies": [
          397,
          284,
          510,
          157
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 44,
        "linearizedBaseContracts": [
          44,
          510,
          284,
          397,
          157
        ],
        "name": "Rolable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "499:146:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "Buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "510:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23,
                        "name": "amIBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "518:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "518:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "510:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "510:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 27,
                      "name": "Seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "539:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 28,
                        "name": "amISeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "548:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "548:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "539:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "539:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "manufacturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "570:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33,
                        "name": "amIManufacturer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "585:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "570:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "570:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "designer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "613:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 38,
                        "name": "amIDesigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "624:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "624:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "613:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "613:24:0"
                }
              ]
            },
            "documentation": "@return array contining every role with its state as boolean",
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoAmI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "name": "Buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "402:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "402:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "name": "Seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "423:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "name": "manufacturer",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "445:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "name": "designer",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "473:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:102:0"
            },
            "scope": 44,
            "src": "354:291:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 45,
        "src": "180:468:0"
      }
    ],
    "src": "0:650:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-09-24T08:10:18.961Z",
  "devdoc": {
    "methods": {
      "amIBuyer()": {
        "return": "boolean for caller address state in `_Buyers` Role"
      },
      "amIDesigner()": {
        "return": "boolean for caller address state in `_designers` Role"
      },
      "amIManufacturer()": {
        "return": "boolean for caller address state in `_manufacturers` Role"
      },
      "amISeller()": {
        "return": "boolean for caller address state in `_Sellers` Role"
      },
      "whoAmI()": {
        "return": "array contining every role with its state as boolean"
      }
    }
  },
  "userdoc": {
    "methods": {
      "assignMeAsBuyer()": {
        "notice": "Function to assign caller `msg.sender` to Buyer role"
      },
      "assignMeAsDesigner()": {
        "notice": "designer allways should be a menufacturer, after checking isManufacturer add it if not"
      },
      "assignMeAsManufacturer()": {
        "notice": "Function to assign caller `msg.sender` to manufacturer role"
      },
      "assignMeAsSeller()": {
        "notice": "Function to assign caller `msg.sender` to Seller role"
      },
      "isBuyer(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "isDesigner(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "isManufacturer(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "isSeller(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "renounceMeFromBuyer()": {
        "notice": "Function to renounce caller `msg.sender` from Buyer role"
      },
      "renounceMeFromDesigner()": {
        "notice": "Function to renounce caller `msg.sender` from designer role"
      },
      "renounceMeFromManufacturer()": {
        "notice": "Function to renounce caller `msg.sender` from manufacturer role"
      },
      "renounceMeFromSeller()": {
        "notice": "Function to renounce caller `msg.sender` from Seller role"
      }
    }
  }
}