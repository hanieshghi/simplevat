{
  "contractName": "Rolable",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isManufacturer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsBuyer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "assignMeAsManufacturer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMeFromManufacturer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amIManufacturer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ManufacturerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ManufacturerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "whoAmI",
      "outputs": [
        {
          "name": "Buyer",
          "type": "bool"
        },
        {
          "name": "manufacturer",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromBuyer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isManufacturer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsBuyer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"assignMeAsManufacturer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMeFromManufacturer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"whoAmI\",\"outputs\":[{\"name\":\"Buyer\",\"type\":\"bool\"},{\"name\":\"manufacturer\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"amIManufacturer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"amIBuyer()\":{\"return\":\"boolean for caller address state in `_Buyers` Role\"},\"amIManufacturer()\":{\"return\":\"boolean for caller address state in `_manufacturers` Role\"},\"whoAmI()\":{\"return\":\"array contining every role with its state as boolean\"}}},\"userdoc\":{\"methods\":{\"assignMeAsBuyer()\":{\"notice\":\"Function to assign caller `msg.sender` to Buyer role\"},\"assignMeAsManufacturer()\":{\"notice\":\"Function to assign caller `msg.sender` to manufacturer role\"},\"isBuyer(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"isManufacturer(address)\":{\"notice\":\"uses'Roles' library's internal function `has()` to check, refer to library for more detail\"},\"renounceMeFromBuyer()\":{\"notice\":\"Function to renounce caller `msg.sender` from Buyer role\"},\"renounceMeFromManufacturer()\":{\"notice\":\"Function to renounce caller `msg.sender` from manufacturer role\"}}}},\"settings\":{\"compilationTarget\":{\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol\":\"Rolable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol\":{\"keccak256\":\"0x867b166ae6137ebbb5eaece6a0a21eaa52c193498f779d37e34d5e6d0e2694ea\",\"urls\":[\"bzzr://044dc9d38b4b446b725533dea43d5c02d0b1e65929c6d0907237a130b03a0af6\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol\":{\"keccak256\":\"0x112222c33b798cda8c39b84f7c87d0ec3e8e75b3fe7b49f24cb72fd059b5d819\",\"urls\":[\"bzzr://9dcca2e90c10b0666f5a1cccc4201cd012ed903348437430569730b7f837b129\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol\":{\"keccak256\":\"0xc4213c1333c5e3d1043cc3ae92ffc7afb5407ed64451b6cec2a67c2624a8881d\",\"urls\":[\"bzzr://321cb4330a82d16ff4bd73393b8582f26ab95c5ea4fa6f0e810ed3c20eac3385\"]},\"/E/document/blockchain/myprojects/simplevat/contracts/openzeppelin/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]}},\"version\":1}",
  "bytecode": "0x60806040526100133361002760201b60201c565b6100223361008560201b60201c565b6102a2565b61003f8160006100e360201b6105a31790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b61009d8160016100e360201b6105a31790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b6100f382826101c460201b60201c565b15610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061099e6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6106ed806102b16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806348c149bd1161006657806348c149bd14610164578063a40e210f1461016e578063c40f1bdc14610178578063da91254c1461019a578063e1d6f86f146101c757610093565b806307e3c3031461009857806317d4a491146100a25780632a55feec146100fe57806335db95e51461015a575b600080fd5b6100a06101e9565b005b6100e4600480360360208110156100b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f4565b604051808215151515815260200191505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610211565b604051808215151515815260200191505060405180910390f35b61016261022e565b005b61016c610239565b005b610176610244565b005b61018061024f565b604051808215151515815260200191505060405180910390f35b6101a261026a565b6040518083151515158152602001821515151581526020019250505060405180910390f35b6101cf610285565b604051808215151515815260200191505060405180910390f35b6101f2336102a0565b565b600061020a8260016102fa90919063ffffffff16565b9050919050565b60006102278260006102fa90919063ffffffff16565b9050919050565b610237336103d8565b565b61024233610432565b565b61024d3361048c565b565b60006102653360006102fa90919063ffffffff16565b905090565b60008061027561024f565b915061027f610285565b90509091565b600061029b3360016102fa90919063ffffffff16565b905090565b6102b48160006104e690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106a06022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6103ec8160006105a390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b6104468160016105a390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b6104a08160016104e690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b6104f082826102fa565b610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061067f6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6105ad82826102fa565b15610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a72305820a1df2e420d35faa604a449a786acef9dfac8c3ccc0301212a42731a4d22b951d0029526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806348c149bd1161006657806348c149bd14610164578063a40e210f1461016e578063c40f1bdc14610178578063da91254c1461019a578063e1d6f86f146101c757610093565b806307e3c3031461009857806317d4a491146100a25780632a55feec146100fe57806335db95e51461015a575b600080fd5b6100a06101e9565b005b6100e4600480360360208110156100b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f4565b604051808215151515815260200191505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610211565b604051808215151515815260200191505060405180910390f35b61016261022e565b005b61016c610239565b005b610176610244565b005b61018061024f565b604051808215151515815260200191505060405180910390f35b6101a261026a565b6040518083151515158152602001821515151581526020019250505060405180910390f35b6101cf610285565b604051808215151515815260200191505060405180910390f35b6101f2336102a0565b565b600061020a8260016102fa90919063ffffffff16565b9050919050565b60006102278260006102fa90919063ffffffff16565b9050919050565b610237336103d8565b565b61024233610432565b565b61024d3361048c565b565b60006102653360006102fa90919063ffffffff16565b905090565b60008061027561024f565b915061027f610285565b90509091565b600061029b3360016102fa90919063ffffffff16565b905090565b6102b48160006104e690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f83fd4cbc7bc934bdfbae994ac6e72fcc0e50abd6995c1949520e761ba650d58260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806106a06022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6103ec8160006105a390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6599d9dd7f97ccdc3d99ab507544f9f6ebfca20c63a7e3c018da49eeaefb164a60405160405180910390a250565b6104468160016105a390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b6104a08160016104e690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b6104f082826102fa565b610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061067f6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6105ad82826102fa565b15610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a165627a7a72305820a1df2e420d35faa604a449a786acef9dfac8c3ccc0301212a42731a4d22b951d0029",
  "sourceMap": "118:351:0:-;;;442:21:1;452:10;442:9;;;:21;;:::i;:::-;658:28:2;675:10;658:16;;;:28;;:::i;:::-;118:351:0;;1783:119:1;1839:20;1851:7;1839;:11;;;;;;:20;;;;:::i;:::-;1886:7;1875:19;;;;;;;;;;;;1783:119;:::o;2133:140:2:-;2196:27;2215:7;2196:14;:18;;;;;;:27;;;;:::i;:::-;2257:7;2239:26;;;;;;;;;;;;2133:140;:::o;260:175:15:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;118:351:0:-;;;;;;;",
  "deployedSourceMap": "118:351:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;118:351:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:81:1;;;:::i;:::-;;1193:121:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1193:121:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;927:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;927:107:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1344:74;;;:::i;:::-;;1659:88:2;;;:::i;:::-;;1828:95;;;:::i;:::-;;1178:96:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;287:179:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:110:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1492:81:1;1541:24;1554:10;1541:12;:24::i;:::-;1492:81::o;1193:121:2:-;1255:4;1279:27;1298:7;1279:14;:18;;:27;;;;:::i;:::-;1272:34;;1193:121;;;:::o;927:107:1:-;982:4;1006:20;1018:7;1006;:11;;:20;;;;:::i;:::-;999:27;;927:107;;;:::o;1344:74::-;1389:21;1399:10;1389:9;:21::i;:::-;1344:74::o;1659:88:2:-;1711:28;1728:10;1711:16;:28::i;:::-;1659:88::o;1828:95::-;1884:31;1904:10;1884:19;:31::i;:::-;1828:95::o;1178:96:1:-;1219:4;1243:23;1255:10;1243:7;:11;;:23;;;;:::i;:::-;1236:30;;1178:96;:::o;287:179:0:-;335:10;356:17;405:10;:8;:10::i;:::-;397:18;;441:17;:15;:17::i;:::-;426:32;;287:179;;:::o;1472:110:2:-;1520:4;1544:30;1563:10;1544:14;:18;;:30;;;;:::i;:::-;1537:37;;1472:110;:::o;2122:127:1:-;2181:23;2196:7;2181;:14;;:23;;;;:::i;:::-;2233:7;2220:21;;;;;;;;;;;;2122:127;:::o;779:200:15:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;1783:119:1:-;1839:20;1851:7;1839;:11;;:20;;;;:::i;:::-;1886:7;1875:19;;;;;;;;;;;;1783:119;:::o;2133:140:2:-;2196:27;2215:7;2196:14;:18;;:27;;;;:::i;:::-;2257:7;2239:26;;;;;;;;;;;;2133:140;:::o;2493:148::-;2559:30;2581:7;2559:14;:21;;:30;;;;:::i;:::-;2625:7;2605:28;;;;;;;;;;;;2493:148;:::o;510:180:15:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/// Import all Roles\r\nimport \"./Roles/Buyer.sol\";\r\nimport \"./Roles/Manufacturer.sol\";\r\n\r\n\r\ncontract Rolable is Buyer,Manufacturer{\r\n\r\n    /// Function to check all roles for the caller\r\n    /// @return array contining every role with its state as boolean\r\n    function whoAmI() public view returns(\r\n        bool Buyer,\r\n        bool manufacturer\r\n    )\r\n    {\r\n        Buyer = amIBuyer();\r\n        manufacturer = amIManufacturer();\r\n    }\r\n}\r\n",
  "sourcePath": "E:\\document\\blockchain\\myprojects\\simplevat\\contracts\\AccessControl\\Rolable.sol",
  "ast": {
    "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol",
    "exportedSymbols": {
      "Rolable": [
        26
      ]
    },
    "id": 27,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol",
        "file": "./Roles/Buyer.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 140,
        "src": "49:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol",
        "file": "./Roles/Manufacturer.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 253,
        "src": "78:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Buyer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 139,
              "src": "138:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Buyer_$139",
                "typeString": "contract Buyer"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "138:5:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Manufacturer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "144:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Manufacturer_$252",
                "typeString": "contract Manufacturer"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "144:12:0"
          }
        ],
        "contractDependencies": [
          139,
          252
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          252,
          139
        ],
        "name": "Rolable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "386:80:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14,
                      "name": "Buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "397:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15,
                        "name": "amIBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "405:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "397:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "397:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "manufacturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "426:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20,
                        "name": "amIManufacturer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "441:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "441:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "426:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "426:32:0"
                }
              ]
            },
            "documentation": "@return array contining every role with its state as boolean",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoAmI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:2:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "Buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "335:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "manufacturer",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "356:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "324:56:0"
            },
            "scope": 26,
            "src": "287:179:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 27,
        "src": "118:351:0"
      }
    ],
    "src": "0:471:0"
  },
  "legacyAST": {
    "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Rolable.sol",
    "exportedSymbols": {
      "Rolable": [
        26
      ]
    },
    "id": 27,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Buyer.sol",
        "file": "./Roles/Buyer.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 140,
        "src": "49:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/document/blockchain/myprojects/simplevat/contracts/AccessControl/Roles/Manufacturer.sol",
        "file": "./Roles/Manufacturer.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 27,
        "sourceUnit": 253,
        "src": "78:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Buyer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 139,
              "src": "138:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Buyer_$139",
                "typeString": "contract Buyer"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "138:5:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "Manufacturer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "144:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Manufacturer_$252",
                "typeString": "contract Manufacturer"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "144:12:0"
          }
        ],
        "contractDependencies": [
          139,
          252
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 26,
        "linearizedBaseContracts": [
          26,
          252,
          139
        ],
        "name": "Rolable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "386:80:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14,
                      "name": "Buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "397:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15,
                        "name": "amIBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "405:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "405:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "397:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "397:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "manufacturer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "426:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20,
                        "name": "amIManufacturer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "441:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "441:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "426:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "426:32:0"
                }
              ]
            },
            "documentation": "@return array contining every role with its state as boolean",
            "id": 25,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoAmI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:2:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "name": "Buyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "335:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12,
                  "name": "manufacturer",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "356:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "324:56:0"
            },
            "scope": 26,
            "src": "287:179:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 27,
        "src": "118:351:0"
      }
    ],
    "src": "0:471:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-05T05:17:31.299Z",
  "devdoc": {
    "methods": {
      "amIBuyer()": {
        "return": "boolean for caller address state in `_Buyers` Role"
      },
      "amIManufacturer()": {
        "return": "boolean for caller address state in `_manufacturers` Role"
      },
      "whoAmI()": {
        "return": "array contining every role with its state as boolean"
      }
    }
  },
  "userdoc": {
    "methods": {
      "assignMeAsBuyer()": {
        "notice": "Function to assign caller `msg.sender` to Buyer role"
      },
      "assignMeAsManufacturer()": {
        "notice": "Function to assign caller `msg.sender` to manufacturer role"
      },
      "isBuyer(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "isManufacturer(address)": {
        "notice": "uses'Roles' library's internal function `has()` to check, refer to library for more detail"
      },
      "renounceMeFromBuyer()": {
        "notice": "Function to renounce caller `msg.sender` from Buyer role"
      },
      "renounceMeFromManufacturer()": {
        "notice": "Function to renounce caller `msg.sender` from manufacturer role"
      }
    }
  }
}